[package]
name = "automata"
version = "0.0.7"
authors = ["smolkov <asmolkov@lar.com>"]
edition = "2018"
description = "automatisation for linux"
keywords = ["api", "monitor", "server"]
categories = ["linux", "automatisation"]
repository = "https://github.com/smolkov/automata"
readme = "README.md"
license = "Apache-2.0 OR MIT"
# Is it maintained resolution time: `repository` is required.
# is-it-maintained-issue-resolution = { repository = "https://todo.sr.ht/~asmolkov/wqa" }
# Is it maintained percentage of open issues: `repository` is required.
# is-it-maintained-open-issues = { repository = "https://todo.sr.ht/~asmolkov/wqa" }



[badges]
maintenance = { status = "experimental" }
travis-ci = { repository = "smolkov/automata", branch = "master"}

[dependencies]
# Terminal cli
paw = "1.0.0"
structopt = { version = "0.3.1", features = ["paw"] }
ferris-says = "0.1.1"
ci_info = "0.8.0"
convey = "0.2.0"
console = "0.9.0"
indicatif = "0.12.0"
termcolor = "1.0.5"
yansi = "0.5.0"
atty = "0.2.13"
ansi_term = "0.12.1"
prettytable-rs = "0.8.0"
clicolors-control = "1.0.1"
# errors
failure = "0.1.5"

#Time date
chrono = "0.4.9"
# Units
# uom = "0.25.0"
# Log
log = "0.4.8"
femme = "1.2.0"
# Config
# config = "0.9.3"
# confy = "0.3.1"
# Version
semver = "0.9.0"
# Serializer file format
serde_json = "1.0.40"
serde = { version = "1.0.100", features = ["derive"] }

serde_yaml = "0.8.9"
bincode = "1.1.4"
toml = "0.5.3"
ron = "0.5.1"
csv = "1.1.1"

# File system
fs2 = "0.4.3"
lockfile = "0.2.1"

# dirs = "2.0.2"
bytes = "0.4.12"
# directories = "2.0.2"
# walkdir = "2.2.9"
tempfile = "3.1.0"
# git
git2 = "0.10.1"
# lazy
lazy_static = "1.4.0"
once_cell = "1.1.0"
# publish = false

# Serializer
# serde = {version = "1.0.92", features = ["derive"]}
# serde_derive = "1.0.92"
# ron = "0.5.1"


# wqa-settings = { git = "https://git.sr.ht/~asmolkov/wqa-settings",branch = "master" }
# settings = { path = "../settings"}
store = { git="https://github.com/lar-rs/store.git" }
analyzer = { git="https://github.com/lar-rs/analyzer.git"}
# socketcan = "1.7.0"
# dbus = "0.6.4"
# Async
# heapless = "0.4.4"
#
# diesel_migrations = { version = "1.4.0", default-features = false, features = ["sqlite"] }
# matches = "0.1.8"
dtoa = "0.4.4"
itoa = "0.4.4"
# reqwest = "0.9.18"
# serde_with = "1.3.1"
mime = "0.3.14"
mime_guess = "2.0.1"
# regex = "1.1.9"
# futures-fs = "0.0.5"
# rocket = "0.4.2"
# Async runtime
# futures-util-preview = { version = "0.3.0-alpha.17",features = ["async-await", "nightly"] }
# http-service = "0.3.0"
# futures-fs = "0.0.5"


# prometheus = "0.7.0"

# Templates
tera = "0.11"

# tera = "1.0.0-beta.14"


# lain = "0.1.2"
regex = "1.3.1"
compose = "0.1.0"
url = "2.1.0"
reqwest = "0.9.20"
rand = "0.7.1"
hex = "0.3.2"
glob = "0.3.0"
rust-embed = "5.1.0"
# plotters = "0.2.2"
# crossbeam-channel = "0.3.8"
# os_pipe = "0.8.1"
# sentry = "0.15.5"
# console = "0.7.7"
# url = "1.7.2"
# toml = "0.5.1"
# ctrlc = "3.1.3"
# procfs = "0.5.3"
# scopeguard = "1.0.0"
# futures-util = "0.2.1"
# dbus = "0.6.4"
# systemd-crontab-generator = "1.0.2"
# runtime = "0.0.0"
# paw = "1.0.0"
# WQMS package
# dbus = {version= "0.6.5", optional = true}
bytecount = "0.6.0"

# path table.
path-table = "1.0.0"
path-tree = "0.1.8"
# RestAPi Async
futures-preview = { version = "0.3.0-alpha.18", features = [ "async-await", "nightly" ] }
async-std = "0.99.5"
tide = {git = "https://github.com/rustasync/tide.git"}
http = "0.1.18"

#  Database&KV
sled = "0.28.0"
memdb = "1.0.0"
# graphql_client = "0.8.0"
juniper = "0.13.1"
# diesel = { version = "1.4.2", default-features = false, features = ["r2d2", "sqlite"] }
# diesel_derives = "1.4.0"

heim = "0.0.7"
# Metrics
metrics = "0.11.1"
metrics-core = "0.5.1"
metrics-runtime = { version = "0.1.0", default-features = false, features = ["metrics-observer-prometheus"] }
uom = { version = "0.25.0", default-features = false, features = ["autoconvert", "f32", "f64", "u64", "si", "std"] }
# prometheus = "0.7.0"

# DBus
dbus = { git = "https://github.com/diwic/dbus-rs.git", optional = true}

# Flame graph
flame = { version = "0.2.2", optional = true }
flamer = { version = "0.4.0", optional = true }
include-flate = "0.1.3"
async-macros = "0.1.0"
crossbeam = "0.7.2"
openssl-async = "0.3.0-alpha.4"
tls-async = "0.3.0-alpha.7"
scron = "1.0.1"
nix = "0.15.0"
gloo = "0.1.0"
validators = "0.20.13"
armor = "1.1.0"
sysfs_gpio = "0.5.4"
spidev = "0.4.0"
rppal = "0.11.3"

# wqa = {path="../wqa"}
# API sync
[features]
default = []
# The std feature enables std support. Currently it's used only to
# implement std::error::Error on zg_co2::Error.
candbus = ["dbus"]
flame_it = ["flame", "flamer"]


[dev-dependencies]
# http-service-mock = "0.3.0"
# mockers = "0.20"
# mockers_derive = "0.20"
# env_logger = { version = "0.6", default-features = false }


# [patch.crates-io]
# http-service = { git = "https://github.com/rustasync/http-service", branch = "master" }
# http-service-hyper = { git = "https://github.com/rustasync/http-service", branch = "master" }
# http-service-mock = { git = "https://github.com/rustasync/http-service", branch = "master" }

